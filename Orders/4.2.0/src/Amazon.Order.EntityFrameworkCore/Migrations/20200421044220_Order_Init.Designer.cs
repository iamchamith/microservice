// <auto-generated />
using System;
using Amazon.Order.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Amazon.Order.Migrations
{
    [DbContext(typeof(OrderDbContext))]
    [Migration("20200421044220_Order_Init")]
    partial class Order_Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Amazon.Order.Entities.CustomerInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("CustomerInfo","Order");
                });

            modelBuilder.Entity("Amazon.Order.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDateTime");

                    b.Property<int>("CustomerId");

                    b.Property<DateTime>("PaymentCompleteDateTime");

                    b.Property<bool>("PaymentIsComplete");

                    b.Property<decimal>("RemainingPayment");

                    b.Property<int?>("ShippingId");

                    b.Property<decimal>("TotalPrice");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ShippingId");

                    b.ToTable("Order","Order");
                });

            modelBuilder.Entity("Amazon.Order.Entities.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ItemId");

                    b.Property<string>("Name");

                    b.Property<int>("OrderId");

                    b.Property<int>("Quantity");

                    b.Property<decimal>("UnitPrice");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItem","Order");
                });

            modelBuilder.Entity("Amazon.Order.Entities.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount");

                    b.Property<DateTime>("CreateOn");

                    b.Property<int>("OrderId");

                    b.Property<int>("PaymentDoneBy");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("Payment","Order");
                });

            modelBuilder.Entity("Amazon.Order.Entities.Shipping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("ShippingProgress");

                    b.HasKey("Id");

                    b.ToTable("Shipping","Order");
                });

            modelBuilder.Entity("Amazon.Order.Entities.CustomerInfo", b =>
                {
                    b.OwnsOne("App.SharedKernel.ValueObjects.PersonName", "Name", b1 =>
                        {
                            b1.Property<int>("CustomerInfoId")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("FirstName")
                                .IsRequired()
                                .HasColumnName("FirstName")
                                .HasMaxLength(50);

                            b1.Property<string>("LastName")
                                .IsRequired()
                                .HasColumnName("LastName")
                                .HasMaxLength(50);

                            b1.Property<string>("MiddleName")
                                .HasColumnName("MiddleName")
                                .HasMaxLength(50);

                            b1.HasKey("CustomerInfoId");

                            b1.ToTable("CustomerInfo","Order");

                            b1.HasOne("Amazon.Order.Entities.CustomerInfo")
                                .WithOne("Name")
                                .HasForeignKey("App.SharedKernel.ValueObjects.PersonName", "CustomerInfoId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });

                    b.OwnsOne("App.SharedKernel.ValueObjects.Address", "Address", b1 =>
                        {
                            b1.Property<int>("CustomerInfoId")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasColumnName("City")
                                .HasMaxLength(50);

                            b1.Property<string>("Number")
                                .IsRequired()
                                .HasColumnName("Number")
                                .HasMaxLength(50);

                            b1.Property<string>("Street")
                                .IsRequired()
                                .HasColumnName("Street")
                                .HasMaxLength(50);

                            b1.HasKey("CustomerInfoId");

                            b1.ToTable("CustomerInfo","Order");

                            b1.HasOne("Amazon.Order.Entities.CustomerInfo")
                                .WithOne("Address")
                                .HasForeignKey("App.SharedKernel.ValueObjects.Address", "CustomerInfoId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });

            modelBuilder.Entity("Amazon.Order.Entities.Order", b =>
                {
                    b.HasOne("Amazon.Order.Entities.CustomerInfo", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Amazon.Order.Entities.Shipping", "Shipping")
                        .WithMany()
                        .HasForeignKey("ShippingId");
                });

            modelBuilder.Entity("Amazon.Order.Entities.OrderItem", b =>
                {
                    b.HasOne("Amazon.Order.Entities.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Amazon.Order.Entities.Payment", b =>
                {
                    b.HasOne("Amazon.Order.Entities.Order", "Order")
                        .WithMany("Payments")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Amazon.Order.Entities.Shipping", b =>
                {
                    b.OwnsOne("App.SharedKernel.ValueObjects.Address", "Address", b1 =>
                        {
                            b1.Property<int>("ShippingId")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasColumnName("City")
                                .HasMaxLength(50);

                            b1.Property<string>("Number")
                                .IsRequired()
                                .HasColumnName("Number")
                                .HasMaxLength(50);

                            b1.Property<string>("Street")
                                .IsRequired()
                                .HasColumnName("Street")
                                .HasMaxLength(50);

                            b1.HasKey("ShippingId");

                            b1.ToTable("Shipping","Order");

                            b1.HasOne("Amazon.Order.Entities.Shipping")
                                .WithOne("Address")
                                .HasForeignKey("App.SharedKernel.ValueObjects.Address", "ShippingId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
